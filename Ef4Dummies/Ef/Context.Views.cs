//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(Ef4Dummies.Ef.Context),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets5e463e1d60b85b8f15cfb729c409db8ac4d3c82302a1082fa88f489524d933d1))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySets5e463e1d60b85b8f15cfb729c409db8ac4d3c82302a1082fa88f489524d933d1 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "5e463e1d60b85b8f15cfb729c409db8ac4d3c82302a1082fa88f489524d933d1"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.Category")
            {
                return GetView0();
            }

            if (extentName == "CodeFirstDatabase.Product")
            {
                return GetView1();
            }

            if (extentName == "CodeFirstDatabase.Order_Detail")
            {
                return GetView2();
            }

            if (extentName == "CodeFirstDatabase.Order")
            {
                return GetView3();
            }

            if (extentName == "CodeFirstDatabase.Customer")
            {
                return GetView4();
            }

            if (extentName == "CodeFirstDatabase.CustomerDemographic")
            {
                return GetView5();
            }

            if (extentName == "CodeFirstDatabase.Employee")
            {
                return GetView6();
            }

            if (extentName == "CodeFirstDatabase.Territory")
            {
                return GetView7();
            }

            if (extentName == "CodeFirstDatabase.Region")
            {
                return GetView8();
            }

            if (extentName == "CodeFirstDatabase.Shipper")
            {
                return GetView9();
            }

            if (extentName == "CodeFirstDatabase.Supplier")
            {
                return GetView10();
            }

            if (extentName == "CodeFirstDatabase.CustomerDemographicCustomer")
            {
                return GetView11();
            }

            if (extentName == "CodeFirstDatabase.EmployeeTerritory")
            {
                return GetView12();
            }

            if (extentName == "Context.Categories")
            {
                return GetView13();
            }

            if (extentName == "Context.Products")
            {
                return GetView14();
            }

            if (extentName == "Context.Order_Details")
            {
                return GetView15();
            }

            if (extentName == "Context.Orders")
            {
                return GetView16();
            }

            if (extentName == "Context.Customers")
            {
                return GetView17();
            }

            if (extentName == "Context.CustomerDemographics")
            {
                return GetView18();
            }

            if (extentName == "Context.Employees")
            {
                return GetView19();
            }

            if (extentName == "Context.Territories")
            {
                return GetView20();
            }

            if (extentName == "Context.Regions")
            {
                return GetView21();
            }

            if (extentName == "Context.Shippers")
            {
                return GetView22();
            }

            if (extentName == "Context.Suppliers")
            {
                return GetView23();
            }

            if (extentName == "Context.CustomerDemographic_Customers")
            {
                return GetView24();
            }

            if (extentName == "Context.Employee_Territories")
            {
                return GetView25();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Category.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Category
        [CodeFirstDatabaseSchema.Category](T1.Category_CategoryID, T1.Category_CategoryName, T1.Category_Description, T1.Category_Picture)
    FROM (
        SELECT 
            T.CategoryID AS Category_CategoryID, 
            T.CategoryName AS Category_CategoryName, 
            T.Description AS Category_Description, 
            T.Picture AS Category_Picture, 
            True AS _from0
        FROM Context.Categories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Product.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Product
        [CodeFirstDatabaseSchema.Product](T1.Product_ProductID, T1.Product_ProductName, T1.Product_SupplierID, T1.Product_CategoryID, T1.Product_QuantityPerUnit, T1.Product_UnitPrice, T1.Product_UnitsInStock, T1.Product_UnitsOnOrder, T1.Product_ReorderLevel, T1.Product_Discontinued)
    FROM (
        SELECT 
            T.ProductID AS Product_ProductID, 
            T.ProductName AS Product_ProductName, 
            T.SupplierID AS Product_SupplierID, 
            T.CategoryID AS Product_CategoryID, 
            T.QuantityPerUnit AS Product_QuantityPerUnit, 
            T.UnitPrice AS Product_UnitPrice, 
            T.UnitsInStock AS Product_UnitsInStock, 
            T.UnitsOnOrder AS Product_UnitsOnOrder, 
            T.ReorderLevel AS Product_ReorderLevel, 
            T.Discontinued AS Product_Discontinued, 
            True AS _from0
        FROM Context.Products AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Order_Detail.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Order_Detail
        [CodeFirstDatabaseSchema.Order_Detail](T1.[Order_Detail.OrderID], T1.[Order_Detail.ProductID], T1.[Order_Detail.UnitPrice], T1.[Order_Detail.Quantity], T1.[Order_Detail.Discount])
    FROM (
        SELECT 
            T.OrderID AS [Order_Detail.OrderID], 
            T.ProductID AS [Order_Detail.ProductID], 
            T.UnitPrice AS [Order_Detail.UnitPrice], 
            T.Quantity AS [Order_Detail.Quantity], 
            T.Discount AS [Order_Detail.Discount], 
            True AS _from0
        FROM Context.Order_Details AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Order.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Order
        [CodeFirstDatabaseSchema.Order](T1.Order_OrderID, T1.Order_CustomerID, T1.Order_EmployeeID, T1.Order_OrderDate, T1.Order_RequiredDate, T1.Order_ShippedDate, T1.Order_ShipVia, T1.Order_Freight, T1.Order_ShipName, T1.Order_ShipAddress, T1.Order_ShipCity, T1.Order_ShipRegion, T1.Order_ShipPostalCode, T1.Order_ShipCountry)
    FROM (
        SELECT 
            T.OrderID AS Order_OrderID, 
            T.CustomerID AS Order_CustomerID, 
            T.EmployeeID AS Order_EmployeeID, 
            T.OrderDate AS Order_OrderDate, 
            T.RequiredDate AS Order_RequiredDate, 
            T.ShippedDate AS Order_ShippedDate, 
            T.ShipVia AS Order_ShipVia, 
            T.Freight AS Order_Freight, 
            T.ShipName AS Order_ShipName, 
            T.ShipAddress AS Order_ShipAddress, 
            T.ShipCity AS Order_ShipCity, 
            T.ShipRegion AS Order_ShipRegion, 
            T.ShipPostalCode AS Order_ShipPostalCode, 
            T.ShipCountry AS Order_ShipCountry, 
            True AS _from0
        FROM Context.Orders AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Customer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Customer
        [CodeFirstDatabaseSchema.Customer](T1.Customer_CustomerID, T1.Customer_CompanyName, T1.Customer_ContactName, T1.Customer_ContactTitle, T1.Customer_Address, T1.Customer_City, T1.Customer_Region, T1.Customer_PostalCode, T1.Customer_Country, T1.Customer_Phone, T1.Customer_Fax)
    FROM (
        SELECT 
            T.CustomerID AS Customer_CustomerID, 
            T.CompanyName AS Customer_CompanyName, 
            T.ContactName AS Customer_ContactName, 
            T.ContactTitle AS Customer_ContactTitle, 
            T.Address AS Customer_Address, 
            T.City AS Customer_City, 
            T.Region AS Customer_Region, 
            T.PostalCode AS Customer_PostalCode, 
            T.Country AS Customer_Country, 
            T.Phone AS Customer_Phone, 
            T.Fax AS Customer_Fax, 
            True AS _from0
        FROM Context.Customers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.CustomerDemographic.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CustomerDemographic
        [CodeFirstDatabaseSchema.CustomerDemographic](T1.CustomerDemographic_CustomerTypeID, T1.CustomerDemographic_CustomerDesc)
    FROM (
        SELECT 
            T.CustomerTypeID AS CustomerDemographic_CustomerTypeID, 
            T.CustomerDesc AS CustomerDemographic_CustomerDesc, 
            True AS _from0
        FROM Context.CustomerDemographics AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Employee.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Employee
        [CodeFirstDatabaseSchema.Employee](T1.Employee_EmployeeID, T1.Employee_LastName, T1.Employee_FirstName, T1.Employee_Title, T1.Employee_TitleOfCourtesy, T1.Employee_BirthDate, T1.Employee_HireDate, T1.Employee_Address, T1.Employee_City, T1.Employee_Region, T1.Employee_PostalCode, T1.Employee_Country, T1.Employee_HomePhone, T1.Employee_Extension, T1.Employee_Photo, T1.Employee_Notes, T1.Employee_ReportsTo, T1.Employee_PhotoPath)
    FROM (
        SELECT 
            T.EmployeeID AS Employee_EmployeeID, 
            T.LastName AS Employee_LastName, 
            T.FirstName AS Employee_FirstName, 
            T.Title AS Employee_Title, 
            T.TitleOfCourtesy AS Employee_TitleOfCourtesy, 
            T.BirthDate AS Employee_BirthDate, 
            T.HireDate AS Employee_HireDate, 
            T.Address AS Employee_Address, 
            T.City AS Employee_City, 
            T.Region AS Employee_Region, 
            T.PostalCode AS Employee_PostalCode, 
            T.Country AS Employee_Country, 
            T.HomePhone AS Employee_HomePhone, 
            T.Extension AS Employee_Extension, 
            T.Photo AS Employee_Photo, 
            T.Notes AS Employee_Notes, 
            T.ReportsTo AS Employee_ReportsTo, 
            T.PhotoPath AS Employee_PhotoPath, 
            True AS _from0
        FROM Context.Employees AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Territory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Territory
        [CodeFirstDatabaseSchema.Territory](T1.Territory_TerritoryID, T1.Territory_TerritoryDescription, T1.Territory_RegionID)
    FROM (
        SELECT 
            T.TerritoryID AS Territory_TerritoryID, 
            T.TerritoryDescription AS Territory_TerritoryDescription, 
            T.RegionID AS Territory_RegionID, 
            True AS _from0
        FROM Context.Territories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Region.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Region
        [CodeFirstDatabaseSchema.Region](T1.Region_RegionID, T1.Region_RegionDescription)
    FROM (
        SELECT 
            T.RegionID AS Region_RegionID, 
            T.RegionDescription AS Region_RegionDescription, 
            True AS _from0
        FROM Context.Regions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Shipper.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Shipper
        [CodeFirstDatabaseSchema.Shipper](T1.Shipper_ShipperID, T1.Shipper_CompanyName, T1.Shipper_Phone)
    FROM (
        SELECT 
            T.ShipperID AS Shipper_ShipperID, 
            T.CompanyName AS Shipper_CompanyName, 
            T.Phone AS Shipper_Phone, 
            True AS _from0
        FROM Context.Shippers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Supplier.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Supplier
        [CodeFirstDatabaseSchema.Supplier](T1.Supplier_SupplierID, T1.Supplier_CompanyName, T1.Supplier_ContactName, T1.Supplier_ContactTitle, T1.Supplier_Address, T1.Supplier_City, T1.Supplier_Region, T1.Supplier_PostalCode, T1.Supplier_Country, T1.Supplier_Phone, T1.Supplier_Fax, T1.Supplier_HomePage)
    FROM (
        SELECT 
            T.SupplierID AS Supplier_SupplierID, 
            T.CompanyName AS Supplier_CompanyName, 
            T.ContactName AS Supplier_ContactName, 
            T.ContactTitle AS Supplier_ContactTitle, 
            T.Address AS Supplier_Address, 
            T.City AS Supplier_City, 
            T.Region AS Supplier_Region, 
            T.PostalCode AS Supplier_PostalCode, 
            T.Country AS Supplier_Country, 
            T.Phone AS Supplier_Phone, 
            T.Fax AS Supplier_Fax, 
            T.HomePage AS Supplier_HomePage, 
            True AS _from0
        FROM Context.Suppliers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.CustomerDemographicCustomer.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CustomerDemographicCustomer
        [CodeFirstDatabaseSchema.CustomerDemographicCustomer](T1.CustomerDemographicCustomer_CustomerTypeID, T1.CustomerDemographicCustomer_CustomerID)
    FROM (
        SELECT 
            Key(T.CustomerDemographic_Customers_Source).CustomerTypeID AS CustomerDemographicCustomer_CustomerTypeID, 
            Key(T.CustomerDemographic_Customers_Target).CustomerID AS CustomerDemographicCustomer_CustomerID, 
            True AS _from0
        FROM Context.CustomerDemographic_Customers AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.EmployeeTerritory.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing EmployeeTerritory
        [CodeFirstDatabaseSchema.EmployeeTerritory](T1.EmployeeTerritory_EmployeeID, T1.EmployeeTerritory_TerritoryID)
    FROM (
        SELECT 
            Key(T.Employee_Territories_Source).EmployeeID AS EmployeeTerritory_EmployeeID, 
            Key(T.Employee_Territories_Target).TerritoryID AS EmployeeTerritory_TerritoryID, 
            True AS _from0
        FROM Context.Employee_Territories AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Context.Categories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Categories
        [Ef4Dummies.Ef.Category](T1.Category_CategoryID, T1.Category_CategoryName, T1.Category_Description, T1.Category_Picture)
    FROM (
        SELECT 
            T.CategoryID AS Category_CategoryID, 
            T.CategoryName AS Category_CategoryName, 
            T.Description AS Category_Description, 
            T.Picture AS Category_Picture, 
            True AS _from0
        FROM CodeFirstDatabase.Category AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Context.Products.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Products
        [Ef4Dummies.Ef.Product](T1.Product_ProductID, T1.Product_ProductName, T1.Product_SupplierID, T1.Product_CategoryID, T1.Product_QuantityPerUnit, T1.Product_UnitPrice, T1.Product_UnitsInStock, T1.Product_UnitsOnOrder, T1.Product_ReorderLevel, T1.Product_Discontinued)
    FROM (
        SELECT 
            T.ProductID AS Product_ProductID, 
            T.ProductName AS Product_ProductName, 
            T.SupplierID AS Product_SupplierID, 
            T.CategoryID AS Product_CategoryID, 
            T.QuantityPerUnit AS Product_QuantityPerUnit, 
            T.UnitPrice AS Product_UnitPrice, 
            T.UnitsInStock AS Product_UnitsInStock, 
            T.UnitsOnOrder AS Product_UnitsOnOrder, 
            T.ReorderLevel AS Product_ReorderLevel, 
            T.Discontinued AS Product_Discontinued, 
            True AS _from0
        FROM CodeFirstDatabase.Product AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Context.Order_Details.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Order_Details
        [Ef4Dummies.Ef.Order_Detail](T1.[Order_Detail.OrderID], T1.[Order_Detail.ProductID], T1.[Order_Detail.UnitPrice], T1.[Order_Detail.Quantity], T1.[Order_Detail.Discount])
    FROM (
        SELECT 
            T.OrderID AS [Order_Detail.OrderID], 
            T.ProductID AS [Order_Detail.ProductID], 
            T.UnitPrice AS [Order_Detail.UnitPrice], 
            T.Quantity AS [Order_Detail.Quantity], 
            T.Discount AS [Order_Detail.Discount], 
            True AS _from0
        FROM CodeFirstDatabase.Order_Detail AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Context.Orders.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Orders
        [Ef4Dummies.Ef.Order](T1.Order_OrderID, T1.Order_CustomerID, T1.Order_EmployeeID, T1.Order_OrderDate, T1.Order_RequiredDate, T1.Order_ShippedDate, T1.Order_ShipVia, T1.Order_Freight, T1.Order_ShipName, T1.Order_ShipAddress, T1.Order_ShipCity, T1.Order_ShipRegion, T1.Order_ShipPostalCode, T1.Order_ShipCountry)
    FROM (
        SELECT 
            T.OrderID AS Order_OrderID, 
            T.CustomerID AS Order_CustomerID, 
            T.EmployeeID AS Order_EmployeeID, 
            T.OrderDate AS Order_OrderDate, 
            T.RequiredDate AS Order_RequiredDate, 
            T.ShippedDate AS Order_ShippedDate, 
            T.ShipVia AS Order_ShipVia, 
            T.Freight AS Order_Freight, 
            T.ShipName AS Order_ShipName, 
            T.ShipAddress AS Order_ShipAddress, 
            T.ShipCity AS Order_ShipCity, 
            T.ShipRegion AS Order_ShipRegion, 
            T.ShipPostalCode AS Order_ShipPostalCode, 
            T.ShipCountry AS Order_ShipCountry, 
            True AS _from0
        FROM CodeFirstDatabase.[Order] AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Context.Customers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Customers
        [Ef4Dummies.Ef.Customer](T1.Customer_CustomerID, T1.Customer_CompanyName, T1.Customer_ContactName, T1.Customer_ContactTitle, T1.Customer_Address, T1.Customer_City, T1.Customer_Region, T1.Customer_PostalCode, T1.Customer_Country, T1.Customer_Phone, T1.Customer_Fax)
    FROM (
        SELECT 
            T.CustomerID AS Customer_CustomerID, 
            T.CompanyName AS Customer_CompanyName, 
            T.ContactName AS Customer_ContactName, 
            T.ContactTitle AS Customer_ContactTitle, 
            T.Address AS Customer_Address, 
            T.City AS Customer_City, 
            T.Region AS Customer_Region, 
            T.PostalCode AS Customer_PostalCode, 
            T.Country AS Customer_Country, 
            T.Phone AS Customer_Phone, 
            T.Fax AS Customer_Fax, 
            True AS _from0
        FROM CodeFirstDatabase.Customer AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Context.CustomerDemographics.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CustomerDemographics
        [Ef4Dummies.Ef.CustomerDemographic](T1.CustomerDemographic_CustomerTypeID, T1.CustomerDemographic_CustomerDesc)
    FROM (
        SELECT 
            T.CustomerTypeID AS CustomerDemographic_CustomerTypeID, 
            T.CustomerDesc AS CustomerDemographic_CustomerDesc, 
            True AS _from0
        FROM CodeFirstDatabase.CustomerDemographic AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Context.Employees.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Employees
        [Ef4Dummies.Ef.Employee](T1.Employee_EmployeeID, T1.Employee_LastName, T1.Employee_FirstName, T1.Employee_Title, T1.Employee_TitleOfCourtesy, T1.Employee_BirthDate, T1.Employee_HireDate, T1.Employee_Address, T1.Employee_City, T1.Employee_Region, T1.Employee_PostalCode, T1.Employee_Country, T1.Employee_HomePhone, T1.Employee_Extension, T1.Employee_Photo, T1.Employee_Notes, T1.Employee_ReportsTo, T1.Employee_PhotoPath)
    FROM (
        SELECT 
            T.EmployeeID AS Employee_EmployeeID, 
            T.LastName AS Employee_LastName, 
            T.FirstName AS Employee_FirstName, 
            T.Title AS Employee_Title, 
            T.TitleOfCourtesy AS Employee_TitleOfCourtesy, 
            T.BirthDate AS Employee_BirthDate, 
            T.HireDate AS Employee_HireDate, 
            T.Address AS Employee_Address, 
            T.City AS Employee_City, 
            T.Region AS Employee_Region, 
            T.PostalCode AS Employee_PostalCode, 
            T.Country AS Employee_Country, 
            T.HomePhone AS Employee_HomePhone, 
            T.Extension AS Employee_Extension, 
            T.Photo AS Employee_Photo, 
            T.Notes AS Employee_Notes, 
            T.ReportsTo AS Employee_ReportsTo, 
            T.PhotoPath AS Employee_PhotoPath, 
            True AS _from0
        FROM CodeFirstDatabase.Employee AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Context.Territories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Territories
        [Ef4Dummies.Ef.Territory](T1.Territory_TerritoryID, T1.Territory_TerritoryDescription, T1.Territory_RegionID)
    FROM (
        SELECT 
            T.TerritoryID AS Territory_TerritoryID, 
            T.TerritoryDescription AS Territory_TerritoryDescription, 
            T.RegionID AS Territory_RegionID, 
            True AS _from0
        FROM CodeFirstDatabase.Territory AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Context.Regions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Regions
        [Ef4Dummies.Ef.Region](T1.Region_RegionID, T1.Region_RegionDescription)
    FROM (
        SELECT 
            T.RegionID AS Region_RegionID, 
            T.RegionDescription AS Region_RegionDescription, 
            True AS _from0
        FROM CodeFirstDatabase.Region AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Context.Shippers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Shippers
        [Ef4Dummies.Ef.Shipper](T1.Shipper_ShipperID, T1.Shipper_CompanyName, T1.Shipper_Phone)
    FROM (
        SELECT 
            T.ShipperID AS Shipper_ShipperID, 
            T.CompanyName AS Shipper_CompanyName, 
            T.Phone AS Shipper_Phone, 
            True AS _from0
        FROM CodeFirstDatabase.Shipper AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Context.Suppliers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Suppliers
        [Ef4Dummies.Ef.Supplier](T1.Supplier_SupplierID, T1.Supplier_CompanyName, T1.Supplier_ContactName, T1.Supplier_ContactTitle, T1.Supplier_Address, T1.Supplier_City, T1.Supplier_Region, T1.Supplier_PostalCode, T1.Supplier_Country, T1.Supplier_Phone, T1.Supplier_Fax, T1.Supplier_HomePage)
    FROM (
        SELECT 
            T.SupplierID AS Supplier_SupplierID, 
            T.CompanyName AS Supplier_CompanyName, 
            T.ContactName AS Supplier_ContactName, 
            T.ContactTitle AS Supplier_ContactTitle, 
            T.Address AS Supplier_Address, 
            T.City AS Supplier_City, 
            T.Region AS Supplier_Region, 
            T.PostalCode AS Supplier_PostalCode, 
            T.Country AS Supplier_Country, 
            T.Phone AS Supplier_Phone, 
            T.Fax AS Supplier_Fax, 
            T.HomePage AS Supplier_HomePage, 
            True AS _from0
        FROM CodeFirstDatabase.Supplier AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for Context.CustomerDemographic_Customers.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing CustomerDemographic_Customers
        [Ef4Dummies.Ef.CustomerDemographic_Customers](T3.[CustomerDemographic_Customers.CustomerDemographic_Customers_Source], T3.[CustomerDemographic_Customers.CustomerDemographic_Customers_Target])
    FROM (
        SELECT -- Constructing CustomerDemographic_Customers_Source
            CreateRef(Context.CustomerDemographics, row(T2.[CustomerDemographic_Customers.CustomerDemographic_Customers_Source.CustomerTypeID]), [Ef4Dummies.Ef.CustomerDemographic]) AS [CustomerDemographic_Customers.CustomerDemographic_Customers_Source], 
            T2.[CustomerDemographic_Customers.CustomerDemographic_Customers_Target]
        FROM (
            SELECT -- Constructing CustomerDemographic_Customers_Target
                T1.[CustomerDemographic_Customers.CustomerDemographic_Customers_Source.CustomerTypeID], 
                CreateRef(Context.Customers, row(T1.[CustomerDemographic_Customers.CustomerDemographic_Customers_Target.CustomerID]), [Ef4Dummies.Ef.Customer]) AS [CustomerDemographic_Customers.CustomerDemographic_Customers_Target]
            FROM (
                SELECT 
                    T.CustomerTypeID AS [CustomerDemographic_Customers.CustomerDemographic_Customers_Source.CustomerTypeID], 
                    T.CustomerID AS [CustomerDemographic_Customers.CustomerDemographic_Customers_Target.CustomerID], 
                    True AS _from0
                FROM CodeFirstDatabase.CustomerDemographicCustomer AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for Context.Employee_Territories.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Employee_Territories
        [Ef4Dummies.Ef.Employee_Territories](T3.[Employee_Territories.Employee_Territories_Source], T3.[Employee_Territories.Employee_Territories_Target])
    FROM (
        SELECT -- Constructing Employee_Territories_Source
            CreateRef(Context.Employees, row(T2.[Employee_Territories.Employee_Territories_Source.EmployeeID]), [Ef4Dummies.Ef.Employee]) AS [Employee_Territories.Employee_Territories_Source], 
            T2.[Employee_Territories.Employee_Territories_Target]
        FROM (
            SELECT -- Constructing Employee_Territories_Target
                T1.[Employee_Territories.Employee_Territories_Source.EmployeeID], 
                CreateRef(Context.Territories, row(T1.[Employee_Territories.Employee_Territories_Target.TerritoryID]), [Ef4Dummies.Ef.Territory]) AS [Employee_Territories.Employee_Territories_Target]
            FROM (
                SELECT 
                    T.EmployeeID AS [Employee_Territories.Employee_Territories_Source.EmployeeID], 
                    T.TerritoryID AS [Employee_Territories.Employee_Territories_Target.TerritoryID], 
                    True AS _from0
                FROM CodeFirstDatabase.EmployeeTerritory AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
    }
}
